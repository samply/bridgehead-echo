name: Build with docker

on:
  push:
  pull_request:
  schedule:
    # Fetch new base image updates every night at 1am
    - cron: '0 1 * * *'

env:
  CARGO_TERM_COLOR: always
  PROFILE: release

jobs:

  docker:
    # needs: [ build-rust, pre-check, test ]
    if: github.ref_protected == true

    # strategy:
    #   matrix:
    #     components:
    #       - broker
    #       - proxy
    #     features:
    #       - ""
    #       - "sockets"

    # This workflow defines how a maven package is built, tested and published.
    # Visit: https://github.com/samply/github-workflows/blob/develop/.github/workflows/docker-ci.yml, for more information
    uses: samply/github-workflows/.github/workflows/docker-ci.yml@main
    with:
      # The Docker Hub Repository you want eventually push to, e.g samply/share-client
      image-name: "samply/bridgehead-echo"
      # image-tag-suffix: ${{ matrix.features && format('-{0}', matrix.features) }}
      # Define special prefixes for docker tags. They will prefix each images tag.
      # image-tag-prefix: "foo"
      # Define the build context of your image, typically default '.' will be enough
      # build-context: '.'
      # Define the Dockerfile of your image, typically default './Dockerfile' will be enough
      build-file: './Dockerfile'
      # NOTE: This doesn't work currently
      # A list of build arguments, passed to the docker build
      # build-args: |
      #   FEATURE=-${{ matrix.features }}
      #   COMPONENT=${{ matrix.components }}
      # Define the target platforms of the docker build (default "linux/amd64,linux/arm64/v8")
      # build-platforms: "linux/amd64"
      # If your actions generate an artifact in a previous build step, you can tell this workflow to download it
      artifact-name: '*'
    # This passes the secrets from calling workflow to the called workflow
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
